The EDF (Earliest Deadline First) scheduler is implemented with 2 queues (ready and blocked) and a periodic scheduler task. The ready queue is sorted by the deadlines (earliest deadlines at the front of the queue). The blocked queue is used to keep track of tasks that have completed executing and is now waiting for it's next time to start (periodic tasks). The scheduler task will run every second.

The scheduler is the highest priority for FreeRTOS's native scheduler purposes. The scheduler will run its algorithm to determine what tasks it should let run next, then put itself into a sleep/suspended state for a time period of 1 second. In this 1 second time period, lower priority tasks (our normal tasks) will execute. After the 1 second is up, the scheduler is run again, and so on.

The scheduler works by first checking to see if there are any tasks it allowed to run in the previous time unit. If there were, it checks to see if that task has completed executing. If it has, it gets put into the blocked queue, if it hasn't it gets put into the ready queue and gets suspended from FreeRTOS's scheduler (it won't conflict with another task that is actually supposed to run that has the same priority since all tasks have the same priority). Next the scheduler checks to see if any of the periodic tasks (all 3 tasks for the purpose of this lab) in the blocked queue is ready to be restarted. If any task is, it gets put into the ready queue and it's new deadline/restart time is updated with the preivous deadline/restart time + the period time.

The scheduler next checks the ready queue. If there are no tasks in the ready queue, then simply do nothing. If there are tasks in the ready queue, find the task with the earliest deadline (first task in the queue). Preceeding tasks in the queue are also looked at if they have the same deadline to make sure that the priority of T1 > T2 > T3 is followed. With the task to be run next, it gets removed from the ready queue, and it is resumed in FreeRTOS's scheduler.

It should be noted though, that the ready and blocked queues are not actually queues. They are xLists which are sorted by the xListItems' values (set to be the deadlines).
